// Code generated by ent, DO NOT EDIT.

package article

const (
	// Label holds the string label denoting the article type in the database.
	Label = "article"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldNumber holds the string denoting the number field in the database.
	FieldNumber = "number"
	// EdgeSegments holds the string denoting the segments edge name in mutations.
	EdgeSegments = "segments"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// Table holds the table name of the article in the database.
	Table = "articles"
	// SegmentsTable is the table that holds the segments relation/edge.
	SegmentsTable = "segments"
	// SegmentsInverseTable is the table name for the Segment entity.
	// It exists in this package in order to avoid circular dependency with the "segment" package.
	SegmentsInverseTable = "segments"
	// SegmentsColumn is the table column denoting the segments relation/edge.
	SegmentsColumn = "article_segments"
	// OwnerTable is the table that holds the owner relation/edge.
	OwnerTable = "articles"
	// OwnerInverseTable is the table name for the Document entity.
	// It exists in this package in order to avoid circular dependency with the "document" package.
	OwnerInverseTable = "documents"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "document_articles"
)

// Columns holds all SQL columns for article fields.
var Columns = []string{
	FieldID,
	FieldNumber,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "articles"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"document_articles",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// NumberValidator is a validator for the "number" field. It is called by the builders before save.
	NumberValidator func(float64) error
)
